集合

1、在java中集合分为两大类：

    一类是单个方式存储元素：
        单个方式存储元素，这一类集合中超级父接口：java.util.Collection;

    一类是以键值对儿的方式存储元素:
        以键值对的方式存储元素，这一类集合中超级父接口：java.util.Map;


2、总结（所有的实现类）:
    ArrayList: 底层是数组。
    LinkedList：底层是双向链表。
    Vector：底层是数组，线程安全的，效率较低，使用较少。
    HashSet：底层是HashMap，放到HashSet集合中的元素等同放到HashMap集合key部分了。
    TreeSet：底层是TreeMap，放到TreeSet集合中的元素等同于放到TreeMap集合key部分了。
    HashMap：底层是哈希表。
    Hashtable:底层也是哈希表，只不过线程安全的，效率较低，使用较少。
    Properties：是线程安全的，并且key和value只能存储字符串String。
    TreeMap：底层是二叉树。TreeMap集合的key可以自动按照大小排序。

    List集合存储元素的特点：
        有序可重复
        有序：存进去的顺序和取出的顺序相同，每一个元素都有下标。
        可重复：存进去1，可以再存储一个1

    Set（Map）集合存储元素的特点：
        无序不可重复
        无序:存进去的顺序和取出的顺序不一定相同。另外Set集合中元素没有下标。
        不可重复：存进去1，不能再存储1了。

    SortedSet（SortedMap）集合存储元素的特点：
        首先是无序不可重复的，但是SortedSet集合中的元素是可排序的。
        无序：存进去的顺序和取出的顺序不一定相同。另外Set集合中元素没有下标。
        不可重复：存进去1，不能再存储1了。
        可排序：可以按照大小顺序排列。


    Map集合的key，就是一个Set集合。
    往Set集合中放数据，实际上放到了Map集合的key部分。


3、重点：
    在迭代元素过程当中，一定要使用迭代器Iterator的remove方法，删除元素，
    不要使用集合自带的remove方法删除元素。

4、ArrayList
    a、ArrayList集合初始化容量是10（底层先创建了一个长度为0的数组，当添加第一个元素的时候，初始化容量10。）
    b、ArrayList集合底层是Object类型数组Object[]。
    c、数组扩容，扩容到原容量的1.5倍。
    d、建议给定一个预估计的初始化容量，减少数组的扩容次数，这是ArrayList集合比较重要的优化策略。
    e、数组的优点：检索的效率比较高。
        （每个元素占用空间大小相同，内存地址是连续的，知道首元素内存地址，
        然后知道下标，通过数学表达式计算出元素的内存地址，所以检索效率最高。）
    f、数组的缺点：随机增删元素效率比较低。
        另外数组无法存储大数据量。（很难找到一块非常巨大的连续的内存空间。）
    g、但是需要注意的是：向数组末尾添加元素，效率还是很高的。
    h、ArrayList集合是非线程安全的。（不是线程安全的集合。）

    面试官经常问的一个问题？
        这么多的集合中，你用哪个集合最多？
        答：ArrayList集合。
        因为往数组末尾添加元素，效率不受影响。
        另外，我们检索/查找某个元素的操作比较多。


5、链表LinkedList
    链表的优点：
        由于链表上的元素在空间上存储内存地址不连续。
        所以随机增删元素的时候不会有大量元素位移，因此随机增删效率较高。
        在以后的开发中，如果遇到随机增删集合中元素的业务比较多时，建议
        使用LinkedList。

    链表的缺点：
        不能通过数学表达式计算被查找元素的内存地址，每一次查找都是从头
        节点开始遍历，直到找到为止。所以LinkedList集合检索/查找的效率
        较低。


    ArrayList：把检索发挥到极致。（末尾添加元素效率还是很高的。）
    LinkedList：把随机增删发挥到极致。
    加元素都是往末尾添加，所以ArrayList用的比LinkedList多。

6、LinkedList
    a、LinkedList集合是双向链表。
    b、对于链表数据结构来说，随机增删效率较高，检索效率较低。
    c、链表中的元素在空间存储上，内存地址不连续。


7、Vector
    a、底层也是一个数组。

    b、初始化容量：10

    c、怎么扩容的？
        扩容之后是原容量的2倍。
        10--> 20 --> 40 -->80

    d、ArrayList集合扩容特点：
        ArrayList集合扩容是原容量1.5倍。

    e、Vector中所有的方法都是线程同步的，都带有synchronized关键字，
        是线程安全的。效率比较低，使用较少了。

    f、怎么将一个线程不安全的ArrayList集合转换成线程安全的呢？
        使用集合工具类：
            java.util.Collections;

            java.util.Collection 是集合接口。
            java.util.Collections 是集合工具类。

        示例：
        List myList = new ArrayList();  // 非线程安全的。

        // 变成线程安全的
        Collection.synchronizedList(myList);

        // myList集合就是线程安全的了。
        myList.add("111");
        myList.add("222");
        myList.add("333");













