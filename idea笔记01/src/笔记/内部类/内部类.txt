匿名内部类：

    1、什么是内部类？
        内部类：在类的内部又定义了一个新的类。被称为内部类。

    2、内部类的分类：
        静态内部类：类似于静态变量
        实例内部类：类似于实例变量
        局部内部类：类似于局部变量

    3、使用内部类编写的代码，可读性很差。能不用尽量不用。

    4、匿名内部类是局部内部类的一种。
        因为这个类没有名字而得名，叫做匿名内部类。

    5、学习匿名内部类主要是以后阅读别人的代码的时候，能够理解。
        并不代表以后都要这样写。因为匿名内部类有两个缺点：
        缺点1：太复杂，太乱，可读性差。
        缺点2：类没有名字，以后想重复使用，不能用。

    6、不理解没事，只要记住有这种匿名内部类写法就行了。

示例：

class Test{

    // 静态变量
    static String country;

    // 该类在类的内部，所以称为内部类
    // 由于前面有static，所以称为"静态内部类"
    static class Inner1{
    }

    // 实例变量
    int age;

    // 该类在类的内部，所以称为内部类
    // 没有static叫做实例内部类。
    class Inner2{
    }

    // 方法
    public void doSome(){
        // 局部变量
        int i = 100;
        // 该类在类的内部，所以称为内部类
        // 局部内部类。
        class Inner3{
        }
    }

    public void doOther(){
        // doSome()方法中的局部内部类Inner3，在doOther()中不能用。
    }
}