final关键字

1、final表示最终的，不可变的。

2、final可以修饰变量以及方法，还有类等。

3、final修饰的类无法继承。
    写法：final class A{}

4、final修饰的方法无法被覆盖，被重写。
    写法：public final void doSome(){}

5、final修饰的局部变量，一旦赋值不能重新赋值。（方法中的局部变量）
    写法：final int i = 100;

6、重点【精辟：final修饰的变量，只能赋一次值。】

7、final控制不了能不能调节的问题。final管的是啥？
    final修饰的表示最后的，不能变的，不能改的。

8、final修饰的引用：
    a、该引用只能指向一个对象，并且它只能永远指向该对象，无法再指向其他对象。
        并且在该方法执行过程中，该引用指向对象之后，该对象不会被垃圾回收器回收。
        直到当前方法结束，才会释放空间。

    b、虽然final的引用指向对象A后，不能再重新指向对象B。
        但是对象A内部的数据可以被修改。

    c、还是那一句话，引用也一个变量，final修饰的变量只能赋一次值。
        final int i = 100; ======> final Person p = new Person();

9、final修饰的实例变量，系统不管赋默认值，要求程序员必须手动赋值。
    这个手动赋值，在变量后面赋值可以，在构造方法中赋值也可以。

10、final修饰的实例变量一般添加static修饰。
        实例变量在堆中，一个对象一份。100个对象100份。
        实例变量既然使用final修饰了，说明该实例变量不会随着对象的变化而变化。
        该实例变量前面应该添加：static关键字，变为静态的，存储在方法区。
        // final String country = "中国";
        // static final String country = "中国";
        static final String country = "中国";     //（常量）

11、static final联合修饰的变量称为"常量"。
        常量名建议全部大写，每个单词之间采用下划线衔接。

12、常量：实际上常量和静态变量一样，区别在于：
        常量的值不能变。

13、常量和静态变量，都是存储在方法区，并且都是在类加载时初始化。

14、常量一般都是公共的：public的。
    无需要private封装成私有，因为常量是final修饰，本身就是不可改变的，很安全。

15、
    final总结：
        a、final修饰的类无法继承。
        b、final修饰的方法无法覆盖。
        c、final修饰的变量只能赋值一次值。
        d、final修饰的引用一旦指向某个对象，则不能再重新指向其他对象，
            但该引用指向对象内部的数据是可以修改的。
        e、final修饰的实例变量必须手动初始化，不能采用系统默认值。
        f、final修饰的实例变量一般和static联合使用，称为常量。
            public static final double PI = 3.1415926;  （常量）

16、
    final高度总结:
        final修饰的不可变，最终的！
